{"version":3,"sources":["Grid.jsx","Photo.jsx","SortablePhoto.jsx","App.jsx","index.js"],"names":["Grid","children","columns","style","display","gridTemplateColumns","gridGap","padding","Photo","forwardRef","ref","url","index","faded","props","inlineStyles","opacity","transformOrigin","height","gridRowStart","gridColumnStart","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","SortablePhoto","sortable","useSortable","id","attributes","listeners","setNodeRef","isDragging","transform","transition","CSS","Transform","toString","UploadGallery","useState","photos","items","setItems","activeId","setActiveId","sensors","useSensors","useSensor","MouseSensor","TouchSensor","collisionDetection","closestCenter","onDragStart","event","active","onDragEnd","over","oldIndex","indexOf","newIndex","arrayMove","onDragCancel","strategy","rectSortingStrategy","map","key","adjustScale","rootElement","document","getElementById","ReactDOM","render","StrictMode","App"],"mappings":"mPAEO,SAASA,EAAT,GAAoC,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QAC9B,OACE,yBACEC,MAAO,CACLC,QAAS,OACTC,oBAAoB,UAAD,OAAYH,EAAZ,UACnBI,QAAS,GACTC,QAAS,KAGVN,G,2DCVMO,EAAQC,sBAAW,WAAuCC,GAAS,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,MAAOV,EAA0B,EAA1BA,MAAUW,EAAgB,iBACvEC,EAAY,aAChBC,QAASH,EAAQ,MAAQ,IACzBI,gBAAiB,MACjBC,OAAkB,IAAVN,EAAc,IAAM,IAC5BO,aAAwB,IAAVP,EAAc,SAAW,KACvCQ,gBAA2B,IAAVR,EAAc,SAAW,KAC1CS,gBAAgB,QAAD,OAAUV,EAAV,MACfW,eAAgB,QAChBC,mBAAoB,SACpBC,gBAAiB,QACdrB,GAGL,OAAO,uCAAKO,IAAKA,EAAKP,MAAOY,GAAkBD,OCVpCW,EAAgB,SAACX,GAC5B,IAAMY,EAAWC,YAAY,CAACC,GAAId,EAAMH,MAEtCkB,EAMEH,EANFG,WACAC,EAKEJ,EALFI,UAEAC,GAGEL,EAJFM,WAIEN,EAHFK,YACAE,EAEEP,EAFFO,UACAC,EACER,EADFQ,WAGI/B,EAAQ,CACZ8B,UAAWE,IAAIC,UAAUC,SAASJ,GAClCC,cAGF,OACE,kBAAC1B,EAAD,eACEE,IAAKqB,EACL5B,MAAOA,GACHW,EACAe,EACAC,K,OC8CKQ,EArDO,WACpB,MAA0BC,mBAASC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCH,mBAAS,MAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,YAAWC,YAAUC,KAAcD,YAAUE,MAE7D,OACE,kBAAC,IAAD,CACEJ,QAASA,EACTK,mBAAoBC,IACpBC,YAoBJ,SAAyBC,GACvBT,EAAYS,EAAMC,OAAO1B,KApBvB2B,UAuBJ,SAAuBF,GACrB,IAAOC,EAAgBD,EAAhBC,OAAQE,EAAQH,EAARG,KAEXF,EAAO1B,KAAO4B,EAAK5B,IACrBc,GAAS,SAACD,GACR,IAAMgB,EAAWhB,EAAMiB,QAAQJ,EAAO1B,IAChC+B,EAAWlB,EAAMiB,QAAQF,EAAK5B,IAEpC,OAAOgC,YAAUnB,EAAOgB,EAAUE,MAItCf,EAAY,OAlCViB,aAqCJ,WACEjB,EAAY,QApCV,kBAAC,IAAD,CAAiBH,MAAOA,EAAOqB,SAAUC,KACvC,kBAAC/D,EAAD,CAAME,QAAS,GACZuC,EAAMuB,KAAI,SAACrD,EAAKC,GAAN,OACT,kBAAC,EAAD,CAAeqD,IAAKtD,EAAKA,IAAKA,EAAKC,MAAOA,SAKhD,kBAAC,IAAD,CAAasD,aAAa,GACvBvB,EACC,kBAACnC,EAAD,CAAOG,IAAKgC,EAAU/B,MAAO6B,EAAMiB,QAAQf,KACzC,QCxCNwB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFN,I","file":"static/js/main.2aa78957.chunk.js","sourcesContent":["import React from 'react';\n\nexport function Grid({children, columns}) {\n  return (\n    <div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: `repeat(${columns}, 1fr)`,\n        gridGap: 10,\n        padding: 10,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, {forwardRef} from 'react';\n\nexport const Photo = forwardRef(({url, index, faded, style, ...props}, ref) => {\n  const inlineStyles = {\n    opacity: faded ? '0.2' : '1',\n    transformOrigin: '0 0',\n    height: index === 0 ? 410 : 200,\n    gridRowStart: index === 0 ? 'span 2' : null,\n    gridColumnStart: index === 0 ? 'span 2' : null,\n    backgroundImage: `url(\"${url}\")`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundColor: 'grey',\n    ...style,\n  };\n\n  return <div ref={ref} style={inlineStyles} {...props} />;\n});\n","import React from 'react';\nimport {useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\n\nimport {Photo} from './Photo';\n\nexport const SortablePhoto = (props) => {\n  const sortable = useSortable({id: props.url});\n  const {\n    attributes,\n    listeners,\n    isDragging,\n    setNodeRef,\n    transform,\n    transition,\n  } = sortable;\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <Photo\n      ref={setNodeRef}\n      style={style}\n      {...props}\n      {...attributes}\n      {...listeners}\n    />\n  );\n};\n","import React, {useState} from 'react';\nimport {\n  DndContext,\n  closestCenter,\n  MouseSensor,\n  TouchSensor,\n  DragOverlay,\n  useSensor,\n  useSensors,\n} from '@dnd-kit/core';\nimport {\n  arrayMove,\n  SortableContext,\n  rectSortingStrategy,\n} from '@dnd-kit/sortable';\n\nimport {Grid} from './Grid';\nimport {SortablePhoto} from './SortablePhoto';\nimport {Photo} from './Photo';\nimport photos from './photos.json';\n\nconst UploadGallery = () => {\n  const [items, setItems] = useState(photos);\n  const [activeId, setActiveId] = useState(null);\n  const sensors = useSensors(useSensor(MouseSensor), useSensor(TouchSensor));\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={handleDragStart}\n      onDragEnd={handleDragEnd}\n      onDragCancel={handleDragCancel}\n    >\n      <SortableContext items={items} strategy={rectSortingStrategy}>\n        <Grid columns={4}>\n          {items.map((url, index) => (\n            <SortablePhoto key={url} url={url} index={index} />\n          ))}\n        </Grid>\n      </SortableContext>\n\n      <DragOverlay adjustScale={true}>\n        {activeId ? (\n          <Photo url={activeId} index={items.indexOf(activeId)} />\n        ) : null}\n      </DragOverlay>\n    </DndContext>\n  );\n\n  function handleDragStart(event) {\n    setActiveId(event.active.id);\n  }\n\n  function handleDragEnd(event) {\n    const {active, over} = event;\n\n    if (active.id !== over.id) {\n      setItems((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n\n    setActiveId(null);\n  }\n\n  function handleDragCancel() {\n    setActiveId(null);\n  }\n};\n\nexport default UploadGallery;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}